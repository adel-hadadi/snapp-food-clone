services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - snapp-food

  postgres:
    build:
      context: .
      dockerfile: postgres.Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
      TZ: Asia/Tehran
      POSTGRES_EXTENSIONS: postgis
    volumes:
      - postgresql:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - snapp-food

  migrate:
    image: ghcr.io/kukymbr/goose-docker
    container_name: migrator
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${DB_HOST} user=${DB_USERNAME} password=${DB_PASSWORD} dbname=${DB_NAME}
      - GOOSE_COMMAND=${GOOSE_COMMAND}
      - GOOSE_COMMAND_ARG=${GOOSE_COMMAND_ARG}
    volumes:
      - ./data/database/migrations:/migrations
    networks:
      - snapp-food

volumes:
  postgresql:
    driver: local

networks:
  snapp-food:
    driver: bridge
